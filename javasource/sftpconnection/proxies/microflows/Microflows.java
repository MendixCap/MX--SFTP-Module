// This file was generated by Mendix Modeler 6.8.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package sftpconnection.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the SFTPConnection module
	public static boolean bCo_DenyCommitWithoutEvents(IContext context)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			return (Boolean)Core.execute(context, "SFTPConnection.BCo_DenyCommitWithoutEvents", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<sftpconnection.proxies.SFTPFileDocument> dS_GetDocumentList(IContext context)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			java.util.List<IMendixObject> objs = Core.execute(context, "SFTPConnection.DS_GetDocumentList", params);
			java.util.List<sftpconnection.proxies.SFTPFileDocument> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<sftpconnection.proxies.SFTPFileDocument>();
				for (IMendixObject obj : objs)
					result.add(sftpconnection.proxies.SFTPFileDocument.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static sftpconnection.proxies.PublicKey dS_GetOrCreatePublicKey(IContext context)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "SFTPConnection.DS_GetOrCreatePublicKey", params);
			return result == null ? null : sftpconnection.proxies.PublicKey.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DownloadFile(IContext context, sftpconnection.proxies.SFTPFileDocument _sFTPFileDocument)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("SFTPFileDocument", _sFTPFileDocument == null ? null : _sFTPFileDocument.getMendixObject());
			Core.execute(context, "SFTPConnection.IVK_DownloadFile", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_KnownHosts_SetStatusValidated(IContext context, sftpconnection.proxies.KnownHosts _knownHosts)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("KnownHosts", _knownHosts == null ? null : _knownHosts.getMendixObject());
			Core.execute(context, "SFTPConnection.IVK_KnownHosts_SetStatusValidated", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_PassPhraseEntry_ConfirmNewKeyPair(IContext context, sftpconnection.proxies.PassPhraseEntry _passPhraseEntry)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("PassPhraseEntry", _passPhraseEntry == null ? null : _passPhraseEntry.getMendixObject());
			Core.execute(context, "SFTPConnection.IVK_PassPhraseEntry_ConfirmNewKeyPair", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_PassPhraseEntry_GenerateKeyPair(IContext context, sftpconnection.proxies.PassPhraseEntry _passPhraseEntry)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("PassPhraseEntry", _passPhraseEntry == null ? null : _passPhraseEntry.getMendixObject());
			Core.execute(context, "SFTPConnection.IVK_PassPhraseEntry_GenerateKeyPair", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SendFile(IContext context, system.proxies.FileDocument _fileDocument)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("FileDocument", _fileDocument == null ? null : _fileDocument.getMendixObject());
			Core.execute(context, "SFTPConnection.IVK_SendFile", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SFTPConfiguration_CreateSFTPConfiguration(IContext context)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			Core.execute(context, "SFTPConnection.IVK_SFTPConfiguration_CreateSFTPConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SFTPConfiguration_DeleteSFTPConfiguration(IContext context, sftpconnection.proxies.SFTPConfiguration _sFTPConfiguration)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("SFTPConfiguration", _sFTPConfiguration == null ? null : _sFTPConfiguration.getMendixObject());
			Core.execute(context, "SFTPConnection.IVK_SFTPConfiguration_DeleteSFTPConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SFTPConfiguration_SaveSFTPConfiguration(IContext context, sftpconnection.proxies.SFTPConfiguration _sFTPConfiguration)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("SFTPConfiguration", _sFTPConfiguration == null ? null : _sFTPConfiguration.getMendixObject());
			Core.execute(context, "SFTPConnection.IVK_SFTPConfiguration_SaveSFTPConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SFTPConfiguration_SetKnownHosts(IContext context, sftpconnection.proxies.SFTPConfiguration _sFTPConfiguration)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("SFTPConfiguration", _sFTPConfiguration == null ? null : _sFTPConfiguration.getMendixObject());
			Core.execute(context, "SFTPConnection.IVK_SFTPConfiguration_SetKnownHosts", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SFTPConnection_CreatePassPhraseEntry(IContext context, sftpconnection.proxies.SFTPConfiguration _sFTPConfiguration)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("SFTPConfiguration", _sFTPConfiguration == null ? null : _sFTPConfiguration.getMendixObject());
			Core.execute(context, "SFTPConnection.IVK_SFTPConnection_CreatePassPhraseEntry", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean passPhraseEntry_GenerateKeyPair(IContext context, sftpconnection.proxies.PassPhraseEntry _passPhraseEntry)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("PassPhraseEntry", _passPhraseEntry == null ? null : _passPhraseEntry.getMendixObject());
			return (Boolean)Core.execute(context, "SFTPConnection.PassPhraseEntry_GenerateKeyPair", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static sftpconnection.proxies.PrivateKey privateKey_GetOrCreatePrivateKey(IContext context)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "SFTPConnection.PrivateKey_GetOrCreatePrivateKey", params);
			return result == null ? null : sftpconnection.proxies.PrivateKey.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sFTPConfiguration_CreateNPE(IContext context, sftpconnection.proxies.SFTPConfiguration _sFTPConfiguration)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("SFTPConfiguration", _sFTPConfiguration == null ? null : _sFTPConfiguration.getMendixObject());
			Core.execute(context, "SFTPConnection.SFTPConfiguration_CreateNPE", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static sftpconnection.proxies.SFTPConfiguration sFTPConfiguration_CreateSFTPConfiguration(IContext context)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "SFTPConnection.SFTPConfiguration_CreateSFTPConfiguration", params);
			return result == null ? null : sftpconnection.proxies.SFTPConfiguration.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sFTPConfiguration_DisconnectSessions(IContext context)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			Core.execute(context, "SFTPConnection.SFTPConfiguration_DisconnectSessions", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static system.proxies.FileDocument sFTPConfiguration_GetDocument(IContext context, sftpconnection.proxies.SFTPFileDocument _sFTPFileDocument, String _sFTPConfigurationName)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("SFTPFileDocument", _sFTPFileDocument == null ? null : _sFTPFileDocument.getMendixObject());
			params.put("SFTPConfigurationName", _sFTPConfigurationName);
			IMendixObject result = (IMendixObject)Core.execute(context, "SFTPConnection.SFTPConfiguration_GetDocument", params);
			return result == null ? null : system.proxies.FileDocument.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<sftpconnection.proxies.SFTPFileDocument> sFTPConfiguration_GetDocumentList(IContext context, String _sFTPConfigurationName)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("SFTPConfigurationName", _sFTPConfigurationName);
			java.util.List<IMendixObject> objs = Core.execute(context, "SFTPConnection.SFTPConfiguration_GetDocumentList", params);
			java.util.List<sftpconnection.proxies.SFTPFileDocument> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<sftpconnection.proxies.SFTPFileDocument>();
				for (IMendixObject obj : objs)
					result.add(sftpconnection.proxies.SFTPFileDocument.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static sftpconnection.proxies.SFTPConfiguration sFTPConfiguration_GetValidSFTPConfiguration(IContext context, String _configurationName)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("ConfigurationName", _configurationName);
			IMendixObject result = (IMendixObject)Core.execute(context, "SFTPConnection.SFTPConfiguration_GetValidSFTPConfiguration", params);
			return result == null ? null : sftpconnection.proxies.SFTPConfiguration.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean sFTPConfiguration_SaveSFTPConfiguration(IContext context, sftpconnection.proxies.SFTPConfiguration _sFTPConfiguration)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("SFTPConfiguration", _sFTPConfiguration == null ? null : _sFTPConfiguration.getMendixObject());
			return (Boolean)Core.execute(context, "SFTPConnection.SFTPConfiguration_SaveSFTPConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean sFTPConfiguration_SendDocument(IContext context, system.proxies.FileDocument _fileDocument, String _sFTPConfigurationName)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("FileDocument", _fileDocument == null ? null : _fileDocument.getMendixObject());
			params.put("SFTPConfigurationName", _sFTPConfigurationName);
			return (Boolean)Core.execute(context, "SFTPConnection.SFTPConfiguration_SendDocument", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean sFTPConfiguration_SetKnownHosts(IContext context, sftpconnection.proxies.SFTPConfiguration _sFTPConfiguration)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("SFTPConfiguration", _sFTPConfiguration == null ? null : _sFTPConfiguration.getMendixObject());
			return (Boolean)Core.execute(context, "SFTPConnection.SFTPConfiguration_SetKnownHosts", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean sFTPConfiguration_ValidateContentSFTPConfiguration(IContext context, sftpconnection.proxies.SFTPConfiguration _sFTPConfiguration, boolean _validateKnownHosts)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("SFTPConfiguration", _sFTPConfiguration == null ? null : _sFTPConfiguration.getMendixObject());
			params.put("ValidateKnownHosts", _validateKnownHosts);
			return (Boolean)Core.execute(context, "SFTPConnection.SFTPConfiguration_ValidateContentSFTPConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean sFTPConfiguration_ValidateProcessSFTPConfiguration(IContext context, sftpconnection.proxies.SFTPConfiguration _sFTPConfiguration)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("SFTPConfiguration", _sFTPConfiguration == null ? null : _sFTPConfiguration.getMendixObject());
			return (Boolean)Core.execute(context, "SFTPConnection.SFTPConfiguration_ValidateProcessSFTPConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}